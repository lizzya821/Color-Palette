{"version":3,"sources":["mintbean.png","ColorBox.js","ColorArea.js","ColorSelector.js","App.js","index.js"],"names":["module","exports","ColorBox","props","style","backgroundColor","color","width","height","border","margin","ColorArea","console","log","colors","className","Array","isArray","map","toHexString","key","tinycolor","require","ColorSelector","useState","scheme","setColor","setColors","type","onClick","randomColor","random","analogous","monochromatic","splitcomplement","triad","tetrad","complement","onSubmit","evt","preventDefault","onChange","target","name","value","id","defaultChecked","htmlFor","required","headerStyle","fontFamily","fontSize","textAlign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.931e69b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mintbean.cf18b629.png\";","import React from \"react\";\nconst ColorBox = (props) => {\n  return (\n    <div\n      style={{\n        backgroundColor: props.color,\n        width: \"125px\",\n        height: \"125px\",\n        border: \"1px solid #000\",\n        margin: \"3px\",\n      }}\n    >\n      <h4 style={{ color: \"white\" }}>{props.color}</h4>\n    </div>\n  );\n};\n\nexport default ColorBox;\n","import React from \"react\";\nimport ColorBox from \"./ColorBox\";\n\nconst ColorArea = (props) => {\n  console.log(props.colors);\n  return (\n    <div className=\"row mx-3 mt-5\">\n      {Array.isArray(props.colors) ? (\n        props.colors.map((color) => (\n          <ColorBox color={color.toHexString()} key={color} />\n        ))\n      ) : (\n        <ColorBox color={props.colors.toHexString()} key={props.colors} />\n      )}\n    </div>\n  );\n};\n\nexport default ColorArea;\n","import React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\",\n  });\n  const [colors, setColors] = useState([]);\n  const handleChange = (evt) => {\n    setColor({ ...color, [evt.target.name]: evt.target.value });\n  };\n  const radioChange = (evt) => {\n    setColor({ ...color, [evt.target.name]: evt.target.value });\n    switch (evt.target.value) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n  const handleClick = () => {\n    let randomColor = tinycolor.random();\n    setColor({ ...color, color: randomColor.toHexString() });\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(randomColor).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(randomColor).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(randomColor).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(randomColor).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(randomColor).tetrad());\n        break;\n      case \"complement\":\n        setColors([tinycolor(randomColor).complement(), randomColor]);\n        break;\n      default:\n        setColors(tinycolor(randomColor).analogous());\n    }\n  };\n  return (\n    <div>\n      <div className=\"row mx-1\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mx-auto\"\n          onClick={handleClick}\n        >\n          Generate Random Color Scheme\n        </button>\n        <br></br>\n      </div>\n      <div className=\"row\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-check mx-3 row\" onChange={radioChange}>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                id=\"analagous\"\n                value=\"analogous\"\n                defaultChecked\n              />\n              <label htmlFor=\"radio\">Analagous</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"monochromatic\"\n              />\n              <label htmlFor=\"radio\">Monochromatic</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"splitcomplement\"\n              />\n              <label htmlFor=\"radio\">Split Complement</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"triad\"\n              />\n              <label htmlFor=\"radio\">Triad</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"tetrad\"\n              />\n              <label htmlFor=\"radio\">Tetrad</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"complement\"\n              />\n              <label htmlFor=\"radio\">Complement</label>\n            </div>\n          </div>\n          <div className=\"row mx-3\">\n            <label htmlFor=\"input\">Enter Your Base Color:</label>\n            <input\n              type=\"text\"\n              name=\"color\"\n              value={color.color}\n              required\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\" mx-3 btn btn-primary\">\n              Generate Color Scheme\n            </button>\n          </div>\n        </form>\n        <div className=\"col\">\n          <ColorArea colors={colors} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorSelector;\n","import React from \"react\";\nimport logo from \"./mintbean.png\";\nimport ColorSelector from \"./ColorSelector\";\n\nconst headerStyle = {\n  fontFamily: \"sans-serif\",\n  fontSize: \"50px\",\n  textAlign: \"center\",\n  margin: \"6rem 0\",\n  color: \"blue\",\n};\n\nfunction App() {\n  return (\n    <div>\n      <h1 style={headerStyle}>Color Scheme Generator</h1>\n      <h6 style={{ textAlign: \"center\" }}>\n        Enter a color name, hex color, RGB or RBGA color to generate a color\n        scheme. You can also choose the color scheme you want to use. Click the\n        random color scheme generator button if you don't have a color in mind!\n      </h6>\n      <br></br>\n      <ColorSelector />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}