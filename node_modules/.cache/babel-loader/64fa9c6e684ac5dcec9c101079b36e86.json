{"ast":null,"code":"var _jsxFileName = \"/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js\";\nimport React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\"\n  });\n  const [colors, setColors] = useState([]);\n\n  const handleChange = evt => {\n    setColor({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleClick = () => {\n    let randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    setColors(tinycolor(randomColor).analogous());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Generate Random Color Scheme\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Analagous\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    id: \"analagous\",\n    value: \"analogous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Monochromatic\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    id: \"monochromatic\",\n    value: \"monochromatic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Enter Your Base Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"color\",\n    value: color.color,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Generate Color Scheme\")), /*#__PURE__*/React.createElement(ColorArea, {\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ColorSelector;","map":{"version":3,"sources":["/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js"],"names":["React","useState","ColorArea","tinycolor","require","ColorSelector","color","setColor","scheme","colors","setColors","handleChange","evt","target","name","value","handleSubmit","preventDefault","monochromatic","analogous","handleClick","randomColor","Math","floor","random","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\",\n  });\n  const [colors, setColors] = useState([]);\n  const handleChange = (evt) => {\n    setColor({ [evt.target.name]: evt.target.value });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n  const handleClick = () => {\n    let randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    setColors(tinycolor(randomColor).analogous());\n  };\n  return (\n    <div>\n      <button type=\"button\" onClick={handleClick}>\n        Generate Random Color Scheme\n      </button>\n      <form onSubmit={handleSubmit} onChange={handleChange}>\n        <div className=\"radios\">\n          <label htmlFor=\"radio\">Analagous</label>\n          <input type=\"radio\" name=\"scheme\" id=\"analagous\" value=\"analogous\" />\n          <label htmlFor=\"radio\">Monochromatic</label>\n          <input\n            type=\"radio\"\n            name=\"scheme\"\n            id=\"monochromatic\"\n            value=\"monochromatic\"\n          />\n        </div>\n        <label htmlFor=\"input\">Enter Your Base Color:</label>\n        <input type=\"text\" name=\"color\" value={color.color} required />\n        <button type=\"submit\">Generate Color Scheme</button>\n      </form>\n      <ColorArea colors={colors} />\n    </div>\n  );\n};\n\nexport default ColorSelector;\n"]},"metadata":{},"sourceType":"module"}