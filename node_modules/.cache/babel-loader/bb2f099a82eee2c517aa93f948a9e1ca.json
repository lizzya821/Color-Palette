{"ast":null,"code":"var _jsxFileName = \"/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js\";\nimport React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\"\n  });\n  const [colors, setColors] = useState([]);\n\n  const handleChange = evt => {\n    setColor({ ...color,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const radioChange = evt => {\n    setColor({ ...color,\n      [evt.target.name]: evt.target.value\n    });\n\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleClick = () => {\n    let randomColor = tinycolor.random();\n    setColor({ ...color,\n      color: randomColor.toHexString()\n    });\n\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(randomColor).analogous());\n        break;\n\n      case \"monochromatic\":\n        setColors(tinycolor(randomColor).monochromatic());\n        break;\n\n      case \"splitcomplement\":\n        setColors(tinycolor(randomColor).splitcomplement());\n        break;\n\n      case \"triad\":\n        setColors(tinycolor(randomColor).triad());\n        break;\n\n      case \"tetrad\":\n        setColors(tinycolor(randomColor).tetrad());\n        break;\n\n      case \"complement\":\n        setColors([tinycolor(randomColor).complement(), randomColor]);\n        break;\n\n      default:\n        setColors(tinycolor(randomColor).analogous());\n    }\n  };\n\n  console.log(color);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary mx-auto\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Generate Random Color Scheme\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check mx-3 form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    id: \"analagous\",\n    value: \"analogous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Analagous\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"monochromatic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Monochromatic\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"splitcomplement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Split Complement\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"triad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Triad\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"tetrad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Tetrad\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"complement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Complement\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Enter Your Base Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"color\",\n    value: color.color,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \" mx-3 btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Generate Color Scheme\")))), /*#__PURE__*/React.createElement(ColorArea, {\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ColorSelector;","map":{"version":3,"sources":["/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js"],"names":["React","useState","ColorArea","tinycolor","require","ColorSelector","color","setColor","scheme","colors","setColors","handleChange","evt","target","name","value","radioChange","analogous","monochromatic","splitcomplement","triad","tetrad","complement","handleSubmit","preventDefault","handleClick","randomColor","random","toHexString","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\",\n  });\n  const [colors, setColors] = useState([]);\n  const handleChange = (evt) => {\n    setColor({ ...color, [evt.target.name]: evt.target.value });\n  };\n  const radioChange = (evt) => {\n    setColor({ ...color, [evt.target.name]: evt.target.value });\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(color.color).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(color.color).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(color.color).tetrad());\n        break;\n      case \"complement\":\n        setColors(tinycolor(color.color).complement());\n        break;\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n  const handleClick = () => {\n    let randomColor = tinycolor.random();\n    setColor({ ...color, color: randomColor.toHexString() });\n    switch (color.scheme) {\n      case \"analogous\":\n        setColors(tinycolor(randomColor).analogous());\n        break;\n      case \"monochromatic\":\n        setColors(tinycolor(randomColor).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(randomColor).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(randomColor).triad());\n        break;\n      case \"tetrad\":\n        setColors(tinycolor(randomColor).tetrad());\n        break;\n      case \"complement\":\n        setColors([tinycolor(randomColor).complement(), randomColor]);\n        break;\n      default:\n        setColors(tinycolor(randomColor).analogous());\n    }\n  };\n  console.log(color);\n  return (\n    <div>\n      <div className=\"row mx-1\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mx-auto\"\n          onClick={handleClick}\n        >\n          Generate Random Color Scheme\n        </button>\n        <br></br>\n      </div>\n      <div>\n        <form onSubmit={handleSubmit} onChange={handleChange}>\n          <div className=\"form-check mx-3 form-check-inline\">\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                id=\"analagous\"\n                value=\"analogous\"\n              />\n              <label htmlFor=\"radio\">Analagous</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"monochromatic\"\n              />\n              <label htmlFor=\"radio\">Monochromatic</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"splitcomplement\"\n              />\n              <label htmlFor=\"radio\">Split Complement</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"triad\"\n              />\n              <label htmlFor=\"radio\">Triad</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"tetrad\"\n              />\n              <label htmlFor=\"radio\">Tetrad</label>\n            </div>\n            <div className=\"mx-2\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"scheme\"\n                value=\"complement\"\n              />\n              <label htmlFor=\"radio\">Complement</label>\n            </div>\n          </div>\n          <div className=\"row mx-3\">\n            <label htmlFor=\"input\">Enter Your Base Color:</label>\n            <input type=\"text\" name=\"color\" value={color.color} required />\n            <button type=\"submit\" className=\" mx-3 btn btn-primary\">\n              Generate Color Scheme\n            </button>\n          </div>\n        </form>\n      </div>\n      <ColorArea colors={colors} />\n    </div>\n  );\n};\n\nexport default ColorSelector;\n"]},"metadata":{},"sourceType":"module"}