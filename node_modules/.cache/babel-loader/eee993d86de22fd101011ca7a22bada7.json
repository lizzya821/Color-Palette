{"ast":null,"code":"var _jsxFileName = \"/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js\";\nimport React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\"\n  });\n  const [colors, setColors] = useState([]);\n\n  const handleChange = evt => {\n    setColor({ ...color,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    console.log(color);\n    evt.preventDefault();\n\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n\n  const handleClick = () => {\n    let randomColor = tinycolor.random();\n\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(randomColor).monochromatic());\n        break;\n\n      case \"splitcomplement\":\n        setColors(tinycolor(randomColor).splitcomplement());\n        break;\n\n      case \"triad\":\n        setColors(tinycolor(randomColor).triad());\n        break;\n\n      default:\n        setColors(tinycolor(randomColor).analogous());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Generate Random Color Scheme\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Analagous\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    id: \"analagous\",\n    value: \"analogous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Monochromatic\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"monochromatic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Split Complement\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"splitcomplement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Triad\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"scheme\",\n    value: \"triad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Enter Your Base Color:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"color\",\n    value: color.color,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Generate Color Scheme\")), /*#__PURE__*/React.createElement(ColorArea, {\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ColorSelector;","map":{"version":3,"sources":["/Users/lizzy/Desktop/Coding/Projects/Color_Palette/src/ColorSelector.js"],"names":["React","useState","ColorArea","tinycolor","require","ColorSelector","color","setColor","scheme","colors","setColors","handleChange","evt","target","name","value","handleSubmit","console","log","preventDefault","monochromatic","splitcomplement","analogous","handleClick","randomColor","random","triad"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE,EAD0B;AAEjCE,IAAAA,MAAM,EAAE;AAFyB,GAAD,CAAlC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMU,YAAY,GAAIC,GAAD,IAAS;AAC5BL,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACM,GAAG,CAACC,MAAJ,CAAWC,IAAZ,GAAmBF,GAAG,CAACC,MAAJ,CAAWE;AAA1C,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC5BK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAM,IAAAA,GAAG,CAACO,cAAJ;;AACA,YAAQb,KAAK,CAACE,MAAd;AACE,WAAK,eAAL;AACEE,QAAAA,SAAS,CAACP,SAAS,CAACG,KAAK,CAACA,KAAP,CAAT,CAAuBc,aAAvB,EAAD,CAAT;AACA;;AACF,WAAK,iBAAL;AACEV,QAAAA,SAAS,CAACP,SAAS,CAACG,KAAK,CAACA,KAAP,CAAT,CAAuBe,eAAvB,EAAD,CAAT;AACA;;AACF;AACEX,QAAAA,SAAS,CAACP,SAAS,CAACG,KAAK,CAACA,KAAP,CAAT,CAAuBgB,SAAvB,EAAD,CAAT;AARJ;AAUD,GAbD;;AAcA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,WAAW,GAAGrB,SAAS,CAACsB,MAAV,EAAlB;;AACA,YAAQnB,KAAK,CAACE,MAAd;AACE,WAAK,eAAL;AACEE,QAAAA,SAAS,CAACP,SAAS,CAACqB,WAAD,CAAT,CAAuBJ,aAAvB,EAAD,CAAT;AACA;;AACF,WAAK,iBAAL;AACEV,QAAAA,SAAS,CAACP,SAAS,CAACqB,WAAD,CAAT,CAAuBH,eAAvB,EAAD,CAAT;AACA;;AACF,WAAK,OAAL;AACEX,QAAAA,SAAS,CAACP,SAAS,CAACqB,WAAD,CAAT,CAAuBE,KAAvB,EAAD,CAAT;AACA;;AACF;AACEhB,QAAAA,SAAS,CAACP,SAAS,CAACqB,WAAD,CAAT,CAAuBF,SAAvB,EAAD,CAAT;AAXJ;AAaD,GAfD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAIE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAA8B,IAAA,QAAQ,EAAEL,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,EAAE,EAAC,WAArC;AAAiD,IAAA,KAAK,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAWE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF,eAYE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEL,KAAK,CAACA,KAA7C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAbF,CAJF,eAmBE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEG,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD,CA/DD;;AAiEA,eAAeJ,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ColorArea from \"./ColorArea\";\n\nvar tinycolor = require(\"tinycolor2\");\n\nconst ColorSelector = () => {\n  const [color, setColor] = useState({\n    color: \"\",\n    scheme: \"analagous\",\n  });\n  const [colors, setColors] = useState([]);\n  const handleChange = (evt) => {\n    setColor({ ...color, [evt.target.name]: evt.target.value });\n  };\n\n  const handleSubmit = (evt) => {\n    console.log(color);\n    evt.preventDefault();\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(color.color).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(color.color).splitcomplement());\n        break;\n      default:\n        setColors(tinycolor(color.color).analogous());\n    }\n  };\n  const handleClick = () => {\n    let randomColor = tinycolor.random();\n    switch (color.scheme) {\n      case \"monochromatic\":\n        setColors(tinycolor(randomColor).monochromatic());\n        break;\n      case \"splitcomplement\":\n        setColors(tinycolor(randomColor).splitcomplement());\n        break;\n      case \"triad\":\n        setColors(tinycolor(randomColor).triad());\n        break;\n      default:\n        setColors(tinycolor(randomColor).analogous());\n    }\n  };\n  return (\n    <div>\n      <button type=\"button\" onClick={handleClick}>\n        Generate Random Color Scheme\n      </button>\n      <form onSubmit={handleSubmit} onChange={handleChange}>\n        <div className=\"radios\">\n          <label htmlFor=\"radio\">Analagous</label>\n          <input type=\"radio\" name=\"scheme\" id=\"analagous\" value=\"analogous\" />\n          <label htmlFor=\"radio\">Monochromatic</label>\n          <input type=\"radio\" name=\"scheme\" value=\"monochromatic\" />\n          <label htmlFor=\"radio\">Split Complement</label>\n          <input type=\"radio\" name=\"scheme\" value=\"splitcomplement\" />\n          <label htmlFor=\"radio\">Triad</label>\n          <input type=\"radio\" name=\"scheme\" value=\"triad\" />\n        </div>\n        <label htmlFor=\"input\">Enter Your Base Color:</label>\n        <input type=\"text\" name=\"color\" value={color.color} required />\n        <button type=\"submit\">Generate Color Scheme</button>\n      </form>\n      <ColorArea colors={colors} />\n    </div>\n  );\n};\n\nexport default ColorSelector;\n"]},"metadata":{},"sourceType":"module"}